WEBVTT

1
00:00:00.050 --> 00:00:05.480
[SOUND] In this lecture we're
going to create a basic HTML document

2
00:00:05.480 --> 00:00:11.729
structure by going straight to the editor
and coding one up ourselves and

3
00:00:11.729 --> 00:00:16.556
then we'll validate it on
the w3c web validator site.

4
00:00:16.556 --> 00:00:21.530
Okay so I'm in Sublime Text and
I have a document open a file

5
00:00:21.530 --> 00:00:25.530
open called .-structure.before.HTML.

6
00:00:25.530 --> 00:00:29.460
And it's located in the examples,
Lecture04 folder.

7
00:00:29.460 --> 00:00:31.200
So we have a blank slate
in front of us and

8
00:00:31.200 --> 00:00:34.480
we're going to create our
very first HTML page.

9
00:00:34.480 --> 00:00:39.890
So every HTML page should start with
the doc type or document type declaration.

10
00:00:39.890 --> 00:00:43.160
The words doc type or
HTML could be lower or upper case.

11
00:00:43.160 --> 00:00:47.015
The only thing you have to watch out for

12
00:00:47.015 --> 00:00:52.078
is that there shouldn't
be any space between less

13
00:00:52.078 --> 00:00:56.790
than exclamation point and
the word doc type.

14
00:00:56.790 --> 00:01:00.332
You can have as much space as
you want anywhere else but

15
00:01:00.332 --> 00:01:02.622
it just doesn't look that great.

16
00:01:02.622 --> 00:01:04.915
So we'll just keep it to one space.

17
00:01:04.915 --> 00:01:07.831
In the past, these declaration were pretty
complicated looking, certainly not too

18
00:01:07.831 --> 00:01:10.027
many people would be able to type
them up without copy and paste.

19
00:01:10.027 --> 00:01:11.820
HTML 5 however changed all that.

20
00:01:11.820 --> 00:01:14.560
Now the declaration is
as simple as it can be.

21
00:01:14.560 --> 00:01:17.960
All it does is tell the browser that
it should get ready to render HTML.

22
00:01:17.960 --> 00:01:21.030
Now I know what some of
you might be thinking.

23
00:01:21.030 --> 00:01:23.560
What else would there be if not HTML?

24
00:01:23.560 --> 00:01:27.670
There doesn't seem to be any practical
purpose for this declaration.

25
00:01:27.670 --> 00:01:30.320
If you're thinking that,
you're absolute right.

26
00:01:30.320 --> 00:01:33.690
This declaration is really
largely historical.

27
00:01:33.690 --> 00:01:36.910
When HTML standards were
first becoming popular,

28
00:01:36.910 --> 00:01:40.910
the web was full of pages that were
not compliant with the standards.

29
00:01:40.910 --> 00:01:45.970
To help browsers render those pages
correctly, browsers used the doctype

30
00:01:45.970 --> 00:01:51.820
declaration to distinguish between
noncompliant and compliant pages.

31
00:01:51.820 --> 00:01:55.100
Noncompliant pages were rendered
in what's called the quirks mode,

32
00:01:55.100 --> 00:02:00.050
and the compliant pages were rendered
in what's called the standards mode.

33
00:02:00.050 --> 00:02:01.680
Now, that's all historical.

34
00:02:01.680 --> 00:02:06.750
But what you need to know today is that if
you leave off the HTML page declaration,

35
00:02:06.750 --> 00:02:10.660
that will signal to the browser
that it should treat your pages

36
00:02:10.660 --> 00:02:14.270
as one not following HTML standard.

37
00:02:14.270 --> 00:02:18.520
I'm not going to go into into what that
would actually mean in practice but

38
00:02:18.520 --> 00:02:21.760
needless to say things
would be a bit messed up.

39
00:02:21.760 --> 00:02:23.750
Your layout wouldn't work quite right.

40
00:02:23.750 --> 00:02:27.360
The styles you apply would
work a bit well quirky.

41
00:02:27.360 --> 00:02:33.570
So to make a long story short always use
the simple HTML5 doctype declaration.

42
00:02:34.970 --> 00:02:36.430
Next, goes the html tag,

43
00:02:36.430 --> 00:02:40.730
and that's basically a tag that
contains the entire html document.

44
00:02:40.730 --> 00:02:43.720
After the html tag, goes the head tag.

45
00:02:43.720 --> 00:02:48.310
The head tag contains items that
describe the main content of the page.

46
00:02:48.310 --> 00:02:52.420
Things like what character coding should
the browser use for the main content.

47
00:02:52.420 --> 00:02:57.240
It can contain authors description of
the page, page title, and whatever other

48
00:02:57.240 --> 00:03:02.280
external resources are needed to render
the page properly, among other things.

49
00:03:02.280 --> 00:03:06.660
The point is it contains some
metadata about the main content.

50
00:03:06.660 --> 00:03:11.140
Let's write our first metatag to
specify the character set in coding

51
00:03:11.140 --> 00:03:12.440
of our webpage.

52
00:03:12.440 --> 00:03:17.070
While not absolutely required, it's always
a good idea to specify the character set

53
00:03:17.070 --> 00:03:20.090
that the browser should know how to
interpret the content of the webpage.

54
00:03:20.090 --> 00:03:23.740
The most commonly used
character set is UTF 8.

55
00:03:23.740 --> 00:03:27.160
Also note that the meta
tag is a stand alone tag.

56
00:03:27.160 --> 00:03:29.650
There is no closing meta tag.

57
00:03:29.650 --> 00:03:32.050
Next we'll specify the title of the page.

58
00:03:32.050 --> 00:03:37.070
The title is one of the tags that
is actually required to be here.

59
00:03:37.070 --> 00:03:39.210
Without it, the HTML will be invalid.

60
00:03:40.210 --> 00:03:42.770
After the head tag goes the body tag.

61
00:03:42.770 --> 00:03:46.280
The body tag is the root of all
content that is visible to the user.

62
00:03:46.280 --> 00:03:49.040
It is often referred to as a viewport.

63
00:03:49.040 --> 00:03:51.073
We can now write our content.

64
00:03:55.810 --> 00:03:58.370
Okay, so let's take a look at
how this looks in the browser.

65
00:04:00.020 --> 00:04:01.560
Okay, and here's our page.

66
00:04:01.560 --> 00:04:02.380
Let's see the content.

67
00:04:02.380 --> 00:04:03.490
Coursera is so cool.

68
00:04:03.490 --> 00:04:04.390
I'm learning so much.

69
00:04:04.390 --> 00:04:08.530
And you could see that the title,
Coursera is Cool, is also there.

70
00:04:08.530 --> 00:04:13.184
Next, let's try to take the code
from our page, and copy and

71
00:04:13.184 --> 00:04:17.119
paste it to validate it
inside the W3C validator.

72
00:04:21.700 --> 00:04:23.236
And it says we're valid.

73
00:04:25.890 --> 00:04:30.182
I'm sure you've noticed by now that what
we're doing is nesting one HTML tag into

74
00:04:30.182 --> 00:04:31.300
another.

75
00:04:31.300 --> 00:04:36.060
So for example, we could say that
the head tag contains the title tag.

76
00:04:37.230 --> 00:04:40.650
One important rule when nesting
html tags is that you have to

77
00:04:40.650 --> 00:04:45.320
close the last opened tag before
you close its parent tag.

78
00:04:45.320 --> 00:04:48.440
If you don't,
the html you wrote is invalid.

79
00:04:48.440 --> 00:04:51.490
So for example here I have a paragraph.

80
00:04:51.490 --> 00:04:56.060
And don't worry about what these tags mean
at the moment, but the paragraph tag, p,

81
00:04:56.060 --> 00:05:01.080
is closed before the last open tag, span.

82
00:05:01.080 --> 00:05:02.570
Span is close after.

83
00:05:02.570 --> 00:05:08.000
So if we copy and paste this code and
place it inside our validator and

84
00:05:08.000 --> 00:05:12.590
check it,
you will see that it's complaining, and

85
00:05:12.590 --> 00:05:17.350
saying that, the end tag p seen,
but there were open elements.

86
00:05:17.350 --> 00:05:21.980
In other words, it wants us to close
the span tag, which was opened last,

87
00:05:21.980 --> 00:05:25.270
before we close the outer,
p paragraph tag.

88
00:05:27.360 --> 00:05:29.410
One more note before we move on.

89
00:05:29.410 --> 00:05:31.740
When the browser opens an HTML page.

90
00:05:31.740 --> 00:05:37.630
It always renders or interprets the HTML
code sequentially from top to bottom.

91
00:05:37.630 --> 00:05:42.480
So the doctype declaration gets
interpreted first, then the HTML tag,

92
00:05:42.480 --> 00:05:48.060
then the head tag, and on and on until
it hits the last closing HTML tag.

93
00:05:48.060 --> 00:05:51.690
This'll be important to remember as
we progress further into the course.

94
00:05:52.700 --> 00:05:56.930
In summary, we went over the bare
minimum HTML document plus weighted sum.

95
00:05:58.170 --> 00:06:00.740
We went over the HTML version declaration.

96
00:06:00.740 --> 00:06:02.620
And remember, we always have to use it,

97
00:06:02.620 --> 00:06:07.010
otherwise the browser will be put into
quirks mode and some things will break.

98
00:06:07.010 --> 00:06:08.390
Our first HTML tags.

99
00:06:08.390 --> 00:06:11.480
We used html, meta, head, title, body, and

100
00:06:11.480 --> 00:06:14.170
actually throw in some
paragraph tags as well.

101
00:06:14.170 --> 00:06:17.910
We went over the fact that HTML is
rendered by the browser sequentially,

102
00:06:17.910 --> 00:06:19.380
meaning top to bottom.

103
00:06:19.380 --> 00:06:22.190
And it renders it top to bottom as well.

104
00:06:22.190 --> 00:06:25.061
Next, we're going to talk
about HTML content models.